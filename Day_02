# 2707. Extra Characters in a String
Statement:
You are given a 0-indexed string s and a dictionary of words dictionary. 
You have to break s into one or more non-overlapping substrings such that each substring is present in dictionary. 
There may be some extra characters in s which are not present in any of the substrings.

Return the minimum number of extra characters left over if you break up s optimally.

Solution Code:
//#include<bits/stdc++.h>
//using namespace std;

class Solution
{
public:
    int n;
    int minExtraChar(string s, vector<string>& dictionary)
    {
        int n = s.length();
        vector<int> dp(n + 1, INT_MAX); // Initialize to INT_MAX

        dp[0] = 0;

        for (int i = 1; i <= n; ++i)
        {
            for (const string& word : dictionary)
            {
                if (i >= word.length() && s.substr(i - word.length(), word.length()) == word)
                {
                    dp[i] = min(dp[i], dp[i - word.length()]);
                }
                else
                {
                    dp[i] = min(dp[i], dp[i - 1] + 1); // Consider unmatched character
                }
            }
            
        }

        return dp[n];
    }
};
