456. 132 Pattern

STATEMENT
Given an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], 
nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j].
Return true if there is a 132 pattern in nums, otherwise, return false.

SOLUTION
from typing import List
import bisect


class Solution:
    def find132pattern(self, nums: List[int]) -> bool:
        if len(nums) < 3:
            return False
        
        after = []
        ab = [nums[0]]

        for i in range(1, len(nums)):
            ab.append(min(ab[-1], nums[i]))

        for j in reversed(range(len(nums))):

            if nums[j] > ab[j]:
                index = bisect.bisect_left(after, nums[j])
                if index > 0 and after[index-1] > ab[j]:
                    return True
                bisect.insort_left(after, nums[j])

        return False
